# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.resources_mecplatform import ResourcesMecplatform  # noqa: F401,E501
from swagger_server.models.one_of_get_mec_platforms_response_links_items import OneOfGetMECPlatformsResponseLinksItems  # noqa: F401,E501
from swagger_server import util


class GetMECPlatformsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mec_platforms: List[ResourcesMecplatform]=None, links: List[OneOfGetMECPlatformsResponseLinksItems]=None):  # noqa: E501
        """GetMECPlatformsResponse - a model defined in Swagger

        :param mec_platforms: The mec_platforms of this GetMECPlatformsResponse.  # noqa: E501
        :type mec_platforms: List[ResourcesMecplatform]
        :param links: The links of this GetMECPlatformsResponse.  # noqa: E501
        :type links: List[OneOfGetMECPlatformsResponseLinksItems]
        """
        self.swagger_types = {
            'mec_platforms': List[ResourcesMecplatform],
            'links': List[OneOfGetMECPlatformsResponseLinksItems]
        }

        self.attribute_map = {
            'mec_platforms': 'MECPlatforms',
            'links': 'links'
        }
        self._mec_platforms = mec_platforms
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'GetMECPlatformsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetMECPlatformsResponse of this GetMECPlatformsResponse.  # noqa: E501
        :rtype: GetMECPlatformsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mec_platforms(self) -> List[ResourcesMecplatform]:
        """Gets the mec_platforms of this GetMECPlatformsResponse.


        :return: The mec_platforms of this GetMECPlatformsResponse.
        :rtype: List[ResourcesMecplatform]
        """
        return self._mec_platforms

    @mec_platforms.setter
    def mec_platforms(self, mec_platforms: List[ResourcesMecplatform]):
        """Sets the mec_platforms of this GetMECPlatformsResponse.


        :param mec_platforms: The mec_platforms of this GetMECPlatformsResponse.
        :type mec_platforms: List[ResourcesMecplatform]
        """

        self._mec_platforms = mec_platforms

    @property
    def links(self) -> List[OneOfGetMECPlatformsResponseLinksItems]:
        """Gets the links of this GetMECPlatformsResponse.


        :return: The links of this GetMECPlatformsResponse.
        :rtype: List[OneOfGetMECPlatformsResponseLinksItems]
        """
        return self._links

    @links.setter
    def links(self, links: List[OneOfGetMECPlatformsResponseLinksItems]):
        """Sets the links of this GetMECPlatformsResponse.


        :param links: The links of this GetMECPlatformsResponse.
        :type links: List[OneOfGetMECPlatformsResponseLinksItems]
        """

        self._links = links
