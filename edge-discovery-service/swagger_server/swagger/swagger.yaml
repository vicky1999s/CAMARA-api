openapi: 3.0.0
info:
  title: MEC Exposure & Experience Management API
  description: "# Introduction\n---\n\nUse the MEC Exposure & Experience Management\
    \ API for discovery and utilisation of Multi-Access Edge Compute (MEC) \nresources\
    \ and services. \n\n\n---\n# API Scope\n\n---\n\nAPIs defined in this version\
    \ of the specification can be categorized into the following areas:\n\n* __MEC\
    \ Edge Discovery__ - discovery of optimal MEC platforms\n* __MEC Service Discovery__\
    \ - discovery of optimal Service Endpoints for client connections\n* __MEC Service\
    \ Profile management__ - register, retrieve, update, and delete MEC Service Profiles\n\
    * __MEC Service Endpoint management__ - register one or more Service Endpoints,\
    \ and retrieve, update, and delete those registrations\n* __MEC Edge Event notification__\
    \ - subscription management for MEC and Service discovery Event notifications\n\
    \n---\n# Definitions\n---\nThis section provides definitions of terminologies\
    \ commonly referred to throughout the API descriptions.\n\n* __API Consumer__\
    \ - A user or an application consuming the MEC Exposure and Experience Management\
    \ APIs. \n* __Application Service Provider__ - the developer/publisher who deploys\
    \ applications on MEC platforms.\n* __Density__ - Minimum 4G/5G subscriber density\
    \ in a geographical area, represented as the number of subscribers per square\
    \ kilometer.\n* __Edge Application__ - A cloud application that has some services\
    \ deployed to MEC Platforms to take advantage of low latency and high bandwidth\
    \ when interacting with devices.\n* __Edge Discovery Service (EDS)__ - MEC Exposure\
    \ and Experience Management APIs exposed as a service by a TSP.\n* __Edge Resource__\
    \ - An object defined by the sevice provider representing an edge resource within\
    \ its network domain, such as a MEC Platform.\n* __Event__ - A MEC event is triggered\
    \ if the previously-discovered MEC platform is no longer the optimal choice of\
    \ all available MEC platforms, due to a change in the underlying network or MEC\
    \ infrastructure. The TSP will send out change notifications to API Consumers\
    \ who have active subscription to the event notification. \n* __MEC  Platform__\
    \ - A collection of cloud computing resources housed in a TSP's network facility\
    \ that provide Multi-access Edge Computing (MEC) capabilities.    \n* __Optimal\
    \ MEC  Platforms__ - A list of one or more optimal MEC Platforms to register a\
    \ Service Endpoint, based on the latency and availability of each MEC platform,\
    \ and optionally also based on various query criteria (Service Profile, Region,\
    \ subscriber density or UE identity) defined by the API Consumer.      \n* __Optimal\
    \ MEC Service Endpoints__ â€“ A list of one or more MEC Service Endpoints that provide\
    \ optimal user experience to the client device, based on internal network conditions\
    \ known to the MEC Platform, and also optionally based on various query criteria\
    \ (Service Profile, Region, subscriber density or UE identity) defined by the\
    \ API Consumer. \n* __Region__ - A TSP-defined string identifier representing\
    \ a certain geographical or logical area where MEC resources and services are\
    \ provided.\n* __Registered MEC Hosted Services__ - Applications running on MEC\
    \ platforms which are registered with Edge Discovery Service using the service\
    \ registry APIs.\n* __Service Endpoint__ - The routable endpoint of the service(s)\
    \ within a deployed application that clients connect to, where a service is a\
    \ subcomponent of application    \n* __Service Profile__ - Information about the\
    \ MEC application and the associated service characteristics.\n* __TSP__ - Telecommunications\
    \ Service Provider.      \n* __UEIdentity__ - User Equipment identity, which can\
    \ be a device's IP address, MSISDN, IMEI, MDN, or GPSI.\n* __Zone__ - A logical\
    \ collection of MEC Platforms in a telecommunication provider's network. A Zone\
    \ is part of a Region.\n  \n---\n# Link relationships\n---\n\n__REGIONS__\n* __All-regions__\
    \  list all regions\n\n__ZONES__\n* __All-zones__  list all available zones\n\n\
    __MEC PLATFORMS__\n* __All-mec-platforms__ list all MEC platforms\n* __Optimal-MECPlatforms-by-density__\
    \ return the optimal MEC platform for a given subscriber density\n* __Optimal-MECPlatforms-by-service-profile__\
    \ return the optimal MEC platform for a given service profile\n* __Optimal-MECPlatforms-by-UE__\
    \ return the optimal MEC platform for a given UE identifier\n* __Optimal-MECPlatforms-by-region__\
    \ return the optimal MEC platform for a given region\n* __Optimal-MECPlatforms-by-zone__\
    \ return the optimal MEC platform for a given zone\n\n__Service Endpoints__\n\
    * __All-service-endpoints__ list all Service Endpoints\n* __Register-service-endpoint__\
    \ Register a Service Endpoint     \n* __Update-service-endpoint__ Update a Service\
    \ Endpoint\n* __Delete-service-endpoint__ Delete a Service Endpoint\n* __Optimal-service-endpoints-by-zone__\
    \ return the optimal Service Endpoints associated with the specified Zone\n* __Optimal-service-endpoints-by-region__\
    \ return the optimal Service Endpoints associated with the specified Region\n\
    * __Optimal-service-endpoints-by-service-profile__ return the optimal Service\
    \ Endpoints associated with the specified Service Profile\n\n__SERVICE PROFILES__\n\
    * __All-service-profiles__ list all Service Profiles\n* __Create-service-profile__\
    \ create a new Service Profile\n* __Update-service-profiles__ Update a Service\
    \ Profiles\n* __Delete-service-profile__ Delete a Service Profile based on ID\
    \  \n\n__EVENTS AND SUBSCRIPTIONS__\n* __All-events__ list all events\n* __All-subscriptions__\
    \ list all subscriptions\n* __Create-subscription__ create a subscription for\
    \ Edge Discovery and workload discovery events\n* __Update-subscription__ Update\
    \ a subscription for Edge Discovery and workload discovery events\n* __Delete-subscription__\
    \ Delete a subscription for Edge Discovery and workload discovery events\n\n__COMMON__\n\
    * __Self__ the self-referring URI for the response\n* __Version-History__ link\
    \ to version history for this API\n* __Terms-of-Service__ link The Terms of Service\
    \ for this API\n* __Bookmark__ link to the API bookmark\n\n---\n# Security and\
    \ resilience\n---\n* __Authentication:__ API requests are made with the API Consumer's\
    \ unique key\n* __Integrity:__ APIs requests, responses and callbacks are made\
    \ using HTTP over TLS 1.3 (HTTPS)\n* __Consent to access resources__ is brokered\
    \ via OAuth2.0 with implicit, password and client credentials grant flows\n* __Replay\
    \ errors__ are mitigated through use of request correlator IDs.\n"
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.8.0
servers:
- url: "http://localhost:{port}/v1"
  description: Local host API
  variables:
    port:
      default: "3333"
      enum:
      - "3333"
- url: "http://13.229.103.232:8081/v1"
  description: Production API
  variables:
    port:
      default: "443"
      enum:
      - "443"
      - "8443"
- url: "http://13.229.103.232:8081/v1"
  description: Production API for Regions
  variables:
    region:
      default: east
    port:
      default: "443"
      enum:
      - "443"
      - "8443"
# security:
# - oAuth2:
#   - edge:discovery:read
#   - edge:serviceprofile:read
#   - edge:serviceprofile:write
#   - edge:serviceregistry:read
#   - edge:serviceregistry:write
tags:
- name: Discovery
  description: |
    Discover the regions and zones in the MEC service, find optimal MEC Platforms for your deployed applications, and optimal service endpoints for your clients to connect to.
- name: Service Endpoints
  description: |
    Register and manage the routable Service Endpoints of your deployed applications.
- name: Service Profiles
  description: "Create and manage profiles that describe the service requirements\
    \ of your MEC applications, such as the required connection bandwidth and maximum\
    \ latency. \n"
paths:
  /:
    get:
      tags:
      - Discovery
      summary: List the links to the top-level resources of this API
      description: List the top level resources available from the API bookmark and
        the links to reach them
      operationId: bookmark
      responses:
        "200":
          description: List of top-level resources and their links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
  /serviceprofiles:
    get:
      tags:
      - Service Profiles
      summary: List all service profiles registered under your API key
      description: List all service profiles registered under your API key
      operationId: get_service_profiles
      responses:
        "200":
          description: List all service profiles registered under your API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceProfilesResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_profiles_controller
    post:
      tags:
      - Service Profiles
      summary: Create a service profile
      description: Creates a service profile that describes the resource requirements
        of a service.
      operationId: create_service_profile
      requestBody:
        description: service profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resources_service_profile'
      responses:
        "201":
          description: service profile ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostServiceProfileResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_profiles_controller
  /serviceprofiles/{serviceProfileId}:
    get:
      tags:
      - Service Profiles
      summary: Fetch a service profile
      description: Returns a specified service profile.
      operationId: get_service_profile_by_profile_id
      parameters:
      - name: serviceProfileId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested service profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resources_service_profile'
        "400":
          description: HTTP 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_profiles_controller
    put:
      tags:
      - Service Profiles
      summary: Update Service Profile
      description: Update the definition of a Service Profile.
      operationId: update_service_profile
      parameters:
      - name: serviceProfileId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Service Profile definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resources_service_profile'
      responses:
        "204":
          description: HTTP 204 No Content
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_profiles_controller
    delete:
      tags:
      - Service Profiles
      summary: Delete a Service Profile
      description: Delete Service Profile based on unique service profile ID
      operationId: delete_service_profile
      parameters:
      - name: serviceProfileId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: HTTP 204 No Content
        "400":
          description: HTTP 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_profiles_controller
  /serviceendpoints:
    get:
      tags:
      - Discovery
      summary: Find optimal Service Endpoints for clients to connect to
      description: "Returns a list of optimal Service Endpoints that client devices\
        \ can connect to. You can search based on Service Profile, Region, subscriber\
        \ density or UEIdentity."
      operationId: get_service_endpoints
      parameters:
      - name: region
        in: query
        description: MEC region ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zone
        in: query
        description: MEC zone ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: serviceEndpointsIds
        in: query
        description: "serviceEndpointsIds, delimited by pipe. Each serviceEndpointsId\
          \ is a pointer to the service endpoints (IP address, FQDN etc.) previously\
          \ registered for a given service."
        required: true
        style: pipeDelimited
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/types_serviceEndpoints_Id'
      - name: subscriberDensity
        in: query
        description: Minimum number of 4G/5G subscribers per square kilometer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: UEIdentityType
        in: query
        description: Type of User Equipment identifier used in `UEIdentity`.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/types_UEIdentityType'
      - name: UEIdentity
        in: query
        description: Identifier value for User Equipment. The type of identifier is
          defined by the UEIdentityType parameter.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/types_UEIdentity'
      responses:
        "200":
          description: Find optimal Service Endpoints for clients to connect to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceEndpointsResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
    post:
      tags:
      - Service Endpoints
      summary: Register Service Endpoints
      description: Register Service Endpoints of a deployed application to specified
        MEC Platforms.
      operationId: register_service_endpoints
      requestBody:
        description: Array of Service Endpoints for a deployed application
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/resources_edge_hosted_service'
      responses:
        "201":
          description: Returns a serviceEndpointsId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostServiceEndpointResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_endpoints_controller
  /serviceendpoints/{serviceEndpointsId}:
    get:
      tags:
      - Service Endpoints
      summary: Get registered edge service endpoint information
      description: Returns endpoint information for all Service Endpoints registered
        to a specified serviceEndpointId.
      operationId: get_service_endpoints_by_service_endpoints_id
      parameters:
      - name: serviceEndpointsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
      responses:
        "200":
          description: Arry of registered service endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resources_edge_hosted_service'
                x-content-type: application/json
        "400":
          description: HTTP 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_endpoints_controller
    put:
      tags:
      - Service Endpoints
      summary: Update a Service Endpoint
      description: Update registered Service Endpoint information.
      operationId: update_service_endpoint
      parameters:
      - name: serviceEndpointsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
      requestBody:
        description: Service Endpoint information
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/resources_edge_hosted_service'
      responses:
        "204":
          description: HTTP 204 No Content
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_endpoints_controller
    delete:
      tags:
      - Service Endpoints
      summary: Deregister an application's Service Endpoint
      description: Deregister an application's Service Endpoint from the MEC Platform(s).
      operationId: deregister_service_endpoint
      parameters:
      - name: serviceEndpointsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
      responses:
        "204":
          description: HTTP 204 No Content
        "400":
          description: HTTP 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.service_endpoints_controller
  /mecplatforms:
    get:
      tags:
      - Discovery
      summary: Discover optimal MEC Platforms for deployed applications
      description: "Returns a list of optimal MEC Platforms where you can register\
        \ your deployed application. You can choose to search without passing any\
        \ of the inputs paramaters or a combination of Service Profile, Region, subscriber\
        \ density or UEIdentity."
      operationId: get_mecplatforms
      parameters:
      - name: region
        in: query
        description: MEC region ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zone
        in: query
        description: MEC zone ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: serviceProfileId
        in: query
        description: service profile identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscriberDensity
        in: query
        description: Minimum number of 4G/5G subscribers per square kilometer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: UEIdentityType
        in: query
        description: Type of User Equipment identifier used in `UEIdentity`.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/types_UEIdentityType'
      - name: UEIdentity
        in: query
        description: Identifier value for User Equipment. The type of identifier is
          defined by the UEIdentityType parameter.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/types_UEIdentity'
      responses:
        "200":
          description: MEC platforms matching query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMECPlatformsResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
  /regions:
    get:
      tags:
      - Discovery
      summary: "List the geographical regions supported, and the associated zones"
      description: List the geographical regions supported and the zones within each
      operationId: get_regions
      responses:
        "200":
          description: List of the supported geographical regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
  /regions/{regionId}:
    get:
      tags:
      - Discovery
      summary: Fetch details for a region
      description: Fetch details for a region
      operationId: get_region
      parameters:
      - name: regionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/types_region_Id'
      responses:
        "200":
          description: Details of a region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resources_region'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
  /zones:
    get:
      tags:
      - Discovery
      summary: "List all zones, or zones within a region"
      description: Returns a list of all zones or zones within a specified region.
      operationId: get_zones
      parameters:
      - name: region
        in: query
        description: MEC region ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Zones matching query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZonesResponse'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
  /zones/{zoneId}:
    get:
      tags:
      - Discovery
      summary: Read the properties of a zone
      description: Read the properties of a zone
      operationId: get_zone_by_id
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/types_zone_Id'
      responses:
        "200":
          description: Representation of the Zone resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resources_zone'
        "400":
          description: HTTP 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "401":
          description: HTTP 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        "404":
          description: HTTP 404 The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
        default:
          description: HTTP 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types_error'
      x-openapi-router-controller: swagger_server.controllers.discovery_controller
components:
  schemas:
    resources:
      type: array
      additionalProperties: false
      items:
        oneOf:
        - $ref: '#/components/schemas/links_All-regions'
        - $ref: '#/components/schemas/links_All-zones'
        - $ref: '#/components/schemas/links_All-mec-platforms'
        - $ref: '#/components/schemas/links_All-service-profiles'
        - $ref: '#/components/schemas/links_All-service-endpoints'
    resources_service_profile:
      required:
      - clientType
      type: object
      properties:
        serviceProfileId:
          $ref: '#/components/schemas/types_service_profile_Id'
        clientType:
          type: string
          description: The category of application client.
          enum:
          - V2X
          - ComputerVision
          - MachineLearning
          - IoT
          - Gaming
          - AR
          - VR
          - Analytics
          - Robotics
        ecspFilter:
          type: string
          description: identity of the preferred Edge Computing Service Provider
        clientSchedule:
          type: string
          description: The expected operation schedule of the application client (e.g.
            time windows)
        clientServiceArea:
          type: string
          description: The expected location(s) (e.g. route) of the hosting UE during
            the Client's operation schedule.
        networkResources:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/types_networkResources'
          description: network resource name or properties
        computeResources:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/types_computeResources'
          description: compute resource name or properties
        properties:
          $ref: '#/components/schemas/resources_service_profile_properties'
      additionalProperties: false
      example:
        clientServiceArea: clientServiceArea
        networkResources:
          key:
            minBandwidthKbits: 0
            minAvailability: 5
            maxRequestRate: 6
            maxLatencyMs: 1
            serviceContinuitySupport: true
        serviceProfileId: {}
        clientType: V2X
        clientSchedule: clientSchedule
        computeResources:
          key:
            minRAMGB: 3
            GPU:
              minCoreClockMHz: 5
              minBandwidthGBs: 7
              minMemoryClockMHz: 2
              minTFLOPS: 9
            minStorageGB: 2
        ecspFilter: ecspFilter
        properties:
          data: {}
          type: type
    resources_edge_services_registration:
      type: array
      items:
        $ref: '#/components/schemas/resources_edge_service_description'
    resources_edge_service_description:
      type: object
      properties:
        edgeHostedService:
          $ref: '#/components/schemas/resources_edge_hosted_service'
    resources_edge_hosted_service:
      type: object
      properties:
        ern:
          $ref: '#/components/schemas/types_edgeResource'
        serviceEndpointsId:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
        serviceEndpoint:
          $ref: '#/components/schemas/resources_service_endpoint'
        applicationServerProviderId:
          type: string
          description: Unique ID representing the Edge Application Provider
        applicationId:
          type: string
          description: Unique ID representing the Edge Application
        serviceDescription:
          type: object
          additionalProperties: false
          description: Description of the Service Endpoint
        serviceProfileID:
          $ref: '#/components/schemas/types_service_profile_Id'
      description: Edge hosted service represented by Service Endpoint definition
      example:
        ern: {}
        serviceEndpointsId: {}
        applicationServerProviderId: applicationServerProviderId
        serviceProfileID: {}
        serviceDescription: {}
        serviceEndpoint:
          FQDN: FQDN
          port: 0
          IPv6Address: IPv6Address
          URI: http://example.com/aeiou
          IPv4Address: IPv4Address
        applicationId: applicationId
    resources_service_endpoint:
      type: object
      properties:
        URI:
          type: string
          description: URI of Service Endpoint if available
          format: uri
        FQDN:
          type: string
          description: FQDN of Service Endpoint if available
        IPv4Address:
          type: string
          description: IPv4 Address of Service Endpoint if available
          format: ipv4
        IPv6Address:
          type: string
          description: IPv6 Address of Service Endpoint if available
          format: ipv6
        port:
          type: integer
          description: |
            Port information of Service Endpoint if IPv4 or IPv6 is mentioned
      additionalProperties: false
      example:
        FQDN: FQDN
        port: 0
        IPv6Address: IPv6Address
        URI: http://example.com/aeiou
        IPv4Address: IPv4Address
    resources_mecplatform:
      type: object
      properties:
        ern:
          $ref: '#/components/schemas/types_edgeResource'
        zone:
          $ref: '#/components/schemas/types_zone_Id'
        region:
          $ref: '#/components/schemas/types_region_Id'
        status:
          type: string
          description: Status of the MEC Platform (default is 'unknown')
          default: unknown
          enum:
          - active
          - inactive
          - unknown
        properties:
          type: array
          items:
            $ref: '#/components/schemas/resources_service_profile_properties'
      additionalProperties: false
      example:
        ern: {}
        zone: {}
        region: {}
        properties:
        - data: {}
          type: type
        - data: {}
          type: type
        status: unknown
    resources_region:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/resources_region_metadata'
      - required:
        - zones
        type: object
        properties:
          zones:
            type: array
            items:
              $ref: '#/components/schemas/resources_zone'
    resources_region_metadata:
      type: object
      properties:
        regionId:
          $ref: '#/components/schemas/types_region_Id'
        name:
          type: string
        countryCode:
          type: string
        metro:
          type: string
        area:
          type: string
      additionalProperties: false
      example:
        area: area
        regionId: {}
        countryCode: countryCode
        metro: metro
        name: name
    resources_zone:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/resources_zone_metadata'
      - required:
        - MECPlatforms
        type: object
        properties:
          MECPlatforms:
            type: array
            items:
              $ref: '#/components/schemas/resources_mecplatform'
    resources_zone_metadata:
      type: object
      properties:
        zoneId:
          $ref: '#/components/schemas/types_zone_Id'
        regionId:
          $ref: '#/components/schemas/types_region_Id'
      additionalProperties: false
      example:
        regionId: {}
        zoneId: {}
    types_edgeResource:
      type: object
      additionalProperties: false
      description: |
        An object defined by the service provider representing an edge resource within its network domain, such as a MEC Platform.  The string contains colon-separated metadata in the form   ern:<tsp-identifier>:<tsp-region>:<resource-type>:<resource-identifier>:<tsp-extensions>
    types_resource_name:
      type: object
      additionalProperties: false
      description: |
        A user friendly name to group events.
      enum:
      - ern
      - networkIntelligence
      - edgeApplicationServer
      - ue
    types_region_Id:
      type: object
      additionalProperties: false
      description: |
        Unique identifier representing a region
    types_serviceEndpoints_Id:
      type: object
      additionalProperties: false
      description: |
        A system-defined string identifier representing one or more registered Service Endpoints.
      readOnly: true
    types_service_profile_Id:
      type: object
      additionalProperties: false
      description: |
        Unique identifier for a service profile
      readOnly: false
    types_user_Id:
      required:
      - UEIdentity
      - UEIdentityType
      type: object
      properties:
        UEIdentityType:
          type: string
          enum:
          - MSISDN
          - IPAddress
          - IMEI
          - MDN
          - GPSI
        UEIdentity:
          $ref: '#/components/schemas/types_UEIdentity'
      additionalProperties: false
      description: User equipment identifier that uniquely identifies an API caller
    types_zone_Id:
      type: object
      additionalProperties: false
      description: |
        Unique identifier representing a zone
    types_networkRourceName:
      type: object
      additionalProperties: false
      description: name or tshirt size associated to the network resources required
    types_networkResources:
      type: object
      properties:
        minBandwidthKbits:
          type: integer
          description: Minimum required connection bandwidth in Kbit/s for the application
        serviceContinuitySupport:
          type: boolean
          description: Indicates if service continuity support is required or not
            for the application.
        maxRequestRate:
          type: integer
          description: Maximum request rate that the application can handle
        maxLatencyMs:
          type: integer
          description: "Maximum response time or latency that the application can\
            \ handle, in miliseconds"
        minAvailability:
          type: integer
          description: Minimum availability required for the server
      additionalProperties: false
      example:
        minBandwidthKbits: 0
        minAvailability: 5
        maxRequestRate: 6
        maxLatencyMs: 1
        serviceContinuitySupport: true
    types_computeResources:
      type: object
      properties:
        GPU:
          $ref: '#/components/schemas/types_computeResources_GPU'
        minRAMGB:
          type: integer
          description: minimum RAM required in Gigabytes.
        minStorageGB:
          type: integer
          description: Minimum storgae requirement in Gigabytes
      additionalProperties: false
      description: Compute resources of a service profile
      example:
        minRAMGB: 3
        GPU:
          minCoreClockMHz: 5
          minBandwidthGBs: 7
          minMemoryClockMHz: 2
          minTFLOPS: 9
        minStorageGB: 2
    types_error:
      required:
      - code
      - links
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        links:
          $ref: '#/components/schemas/links_Common'
      additionalProperties: false
    types_success:
      required:
      - code
      - links
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        links:
          $ref: '#/components/schemas/links_Common'
      additionalProperties: false
    types_UEIdentityType:
      type: string
      description: Type of User Equipment identifier used in `UEIdentity`.
      enum:
      - IPAddress
      - MSISDN
      - IMEI
      - MDN
      - GPSI
    types_UEIdentity:
      type: string
      description: Identifier value for User Equipment. The type of identifier is
        defined by the 'UEIdentityType' parameter.
    links_All-mec-platforms:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Allmecplatforms_link'
      additionalProperties: false
      readOnly: true
    links_All-service-profiles:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Allserviceprofiles_link'
      additionalProperties: false
      readOnly: true
    links_All-service-endpoints:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Allserviceendpoints_link'
      additionalProperties: false
      readOnly: true
    links_All-regions:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Allregions_link'
      additionalProperties: false
      readOnly: true
    links_All-zones:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Allzones_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-MEC-platforms-by-region:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_OptimalMECplatformsbyregion_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-MEC-platforms-by-zone:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_OptimalMECplatformsbyzone_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-MEC-platforms-by-density:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_OptimalMECplatformsbydensity_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-MEC-platforms-by-service-profile:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_OptimalMECplatformsbyserviceprofile_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-MEC-platforms-by-UE:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_OptimalMECplatformsbyUE_link'
      additionalProperties: false
      readOnly: true
    links_Register-service-endpoint:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Registerserviceendpoint_link'
      additionalProperties: false
      readOnly: true
    links_Update-service-endpoint:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Updateserviceendpoint_link'
      additionalProperties: false
      readOnly: true
    links_Delete-service-endpoint:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Deleteserviceendpoint_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-service-endpoints-by-service-profile:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Optimalserviceendpointsbyserviceprofile_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-service-endpoints-by-zone:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Optimalserviceendpointsbyzone_link'
      additionalProperties: false
      readOnly: true
    links_Optimal-service-endpoints-by-region:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Optimalserviceendpointsbyregion_link'
      additionalProperties: false
      readOnly: true
    links_Create-service-profile:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Createserviceprofile_link'
      additionalProperties: false
      readOnly: true
    links_Update-service-profile:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Updateserviceprofile_link'
      additionalProperties: false
      readOnly: true
    links_Delete-service-profile:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Deleteserviceprofile_link'
      additionalProperties: false
      readOnly: true
    links_Self:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Self_link'
      additionalProperties: false
      readOnly: true
    links_Version-History:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_VersionHistory_link'
      additionalProperties: false
      readOnly: true
    links_Terms-of-Service:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_TermsofService_link'
      additionalProperties: false
      readOnly: true
    links_Bookmark:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/links_Bookmark_link'
      additionalProperties: false
      readOnly: true
    links_Common:
      type: array
      readOnly: true
      items:
        oneOf:
        - $ref: '#/components/schemas/links_Self'
        - $ref: '#/components/schemas/links_Version-History'
        - $ref: '#/components/schemas/links_Terms-of-Service'
        - $ref: '#/components/schemas/links_Bookmark'
    GetResourcesResponse:
      title: GetResourcesResponse
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/resources'
        links:
          $ref: '#/components/schemas/links_Common'
      example:
        resources:
        - ""
        - ""
        links:
        - ""
        - ""
    GetServiceProfilesResponse:
      title: GetServiceProfilesResponse
      type: object
      properties:
        serviceProfiles:
          type: array
          items:
            $ref: '#/components/schemas/resources_service_profile'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Create-service-profile'
            - $ref: '#/components/schemas/links_Common'
      example:
        serviceProfiles:
        - clientServiceArea: clientServiceArea
          networkResources:
            key:
              minBandwidthKbits: 0
              minAvailability: 5
              maxRequestRate: 6
              maxLatencyMs: 1
              serviceContinuitySupport: true
          serviceProfileId: {}
          clientType: V2X
          clientSchedule: clientSchedule
          computeResources:
            key:
              minRAMGB: 3
              GPU:
                minCoreClockMHz: 5
                minBandwidthGBs: 7
                minMemoryClockMHz: 2
                minTFLOPS: 9
              minStorageGB: 2
          ecspFilter: ecspFilter
          properties:
            data: {}
            type: type
        - clientServiceArea: clientServiceArea
          networkResources:
            key:
              minBandwidthKbits: 0
              minAvailability: 5
              maxRequestRate: 6
              maxLatencyMs: 1
              serviceContinuitySupport: true
          serviceProfileId: {}
          clientType: V2X
          clientSchedule: clientSchedule
          computeResources:
            key:
              minRAMGB: 3
              GPU:
                minCoreClockMHz: 5
                minBandwidthGBs: 7
                minMemoryClockMHz: 2
                minTFLOPS: 9
              minStorageGB: 2
          ecspFilter: ecspFilter
          properties:
            data: {}
            type: type
        links:
        - ""
        - ""
    PostServiceProfileResponse:
      title: PostServiceProfileResponse
      type: object
      properties:
        serviceProfileId:
          $ref: '#/components/schemas/types_service_profile_Id'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Update-service-profile'
            - $ref: '#/components/schemas/links_Delete-service-profile'
            - $ref: '#/components/schemas/links_Common'
      example:
        serviceProfileId: {}
        links:
        - ""
        - ""
    GetServiceEndpointsResponse:
      title: GetServiceEndpointsResponse
      type: object
      properties:
        serviceEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/resources_edge_hosted_service'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Register-service-endpoint'
            - $ref: '#/components/schemas/links_Common'
      example:
        links:
        - ""
        - ""
        serviceEndpoints:
        - ern: {}
          serviceEndpointsId: {}
          applicationServerProviderId: applicationServerProviderId
          serviceProfileID: {}
          serviceDescription: {}
          serviceEndpoint:
            FQDN: FQDN
            port: 0
            IPv6Address: IPv6Address
            URI: http://example.com/aeiou
            IPv4Address: IPv4Address
          applicationId: applicationId
        - ern: {}
          serviceEndpointsId: {}
          applicationServerProviderId: applicationServerProviderId
          serviceProfileID: {}
          serviceDescription: {}
          serviceEndpoint:
            FQDN: FQDN
            port: 0
            IPv6Address: IPv6Address
            URI: http://example.com/aeiou
            IPv4Address: IPv4Address
          applicationId: applicationId
    PostServiceEndpointResponse:
      title: PostServiceEndpointResponse
      type: object
      properties:
        serviceEndpointsId:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Update-service-endpoint'
            - $ref: '#/components/schemas/links_Delete-service-endpoint'
            - $ref: '#/components/schemas/links_Optimal-service-endpoints-by-service-profile'
            - $ref: '#/components/schemas/links_Common'
      example:
        serviceEndpointsId: {}
        links:
        - ""
        - ""
    GetMECPlatformsResponse:
      title: GetMECPlatformsResponse
      type: object
      properties:
        MECPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/resources_mecplatform'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-region'
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-density'
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-service-profile'
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-UE'
            - $ref: '#/components/schemas/links_Register-service-endpoint'
            - $ref: '#/components/schemas/links_Common'
      example:
        MECPlatforms:
        - ern: {}
          zone: {}
          region: {}
          properties:
          - data: {}
            type: type
          - data: {}
            type: type
          status: unknown
        - ern: {}
          zone: {}
          region: {}
          properties:
          - data: {}
            type: type
          - data: {}
            type: type
          status: unknown
        links:
        - ""
        - ""
    GetRegionsResponse:
      title: GetRegionsResponse
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/resources_region_metadata'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-region'
            - $ref: '#/components/schemas/links_Optimal-service-endpoints-by-region'
            - $ref: '#/components/schemas/links_Common'
      example:
        regions:
        - area: area
          regionId: {}
          countryCode: countryCode
          metro: metro
          name: name
        - area: area
          regionId: {}
          countryCode: countryCode
          metro: metro
          name: name
        links:
        - ""
        - ""
    GetZonesResponse:
      title: GetZonesResponse
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/resources_zone_metadata'
        links:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-region'
            - $ref: '#/components/schemas/links_Optimal-MEC-platforms-by-zone'
            - $ref: '#/components/schemas/links_Optimal-service-endpoints-by-zone'
            - $ref: '#/components/schemas/links_Common'
      example:
        links:
        - ""
        - ""
        zones:
        - regionId: {}
          zoneId: {}
        - regionId: {}
          zoneId: {}
    resources_service_profile_properties:
      type: object
      properties:
        type:
          type: string
        data:
          type: object
      example:
        data: {}
        type: type
    types_computeResources_GPU:
      type: object
      properties:
        minCoreClockMHz:
          type: integer
          description: Minimum Core Clock value in megahertz
        minMemoryClockMHz:
          type: integer
          description: Minimum Memory Clock value in megahertz
        minBandwidthGBs:
          type: integer
          description: Minimum GPU bandwidth in GB/s
        minTFLOPS:
          type: integer
          description: Minimum Floating Point Operations Per Second in Teraflops.
      example:
        minCoreClockMHz: 5
        minBandwidthGBs: 7
        minMemoryClockMHz: 2
        minTFLOPS: 9
    links_Allmecplatforms_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListMECPlatforms
          type: string
          example: ListMECPlatforms
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: \/mecplatforms
          type: string
          example: /mecplatforms
    links_Allserviceprofiles_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListServiceProfiles
          type: string
          example: ListServiceProfiles
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: \/serviceprofiles
          type: string
          example: /serviceprofiles
    links_Allserviceendpoints_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListServiceEndpoints
          type: string
          example: ListServiceEndpoints
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: \/serviceendpoints
          type: string
          example: /serviceendpoints
    links_Allregions_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListRegions
          type: string
          example: ListRegions
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: \/regions
          type: string
          example: /regions
    links_Allzones_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListZones
          type: string
          example: ListZones
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: \/zones
          type: string
          example: /zones
    links_OptimalMECplatformsbyregion_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalPlatformsByRegion
          type: string
          example: GetOptimalPlatformsByRegion
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/mecplatforms\\?region=[a-zA-Z0-9-]*$"
          type: string
          example: /mecplatforms?region=us-east1
    links_OptimalMECplatformsbyzone_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalPlatformsByZone
          type: string
          example: GetOptimalPlatformsByZone
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/mecplatforms\\?zone=[a-zA-Z0-9-]*$"
          type: string
          example: /mecplatforms?zone=us-east1-boston
    links_OptimalMECplatformsbydensity_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalPlatformsBySubscriberDensity
          type: string
          example: GetOptimalPlatformsBySubscriberDensity
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/mecplatforms\\?subscriberDensity=[0-9]*$"
          type: string
          example: /mecplatforms?subscriberDensity=100
    links_OptimalMECplatformsbyserviceprofile_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalPlatformsByServiceProfile
          type: string
          example: GetOptimalPlatformsByServiceProfile
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/mecplatforms\\?serviceProfileId=[a-zA-Z0-9-]*$"
          type: string
          example: /mecplatforms?serviceProfileId=12345
    links_OptimalMECplatformsbyUE_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalPlatformsByUEId
          type: string
          example: GetOptimalPlatformsByUEId
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/mecplatforms\\?UEIdentityType=[a-zA-Z0-9-]*\\&UEIdentity=[a-zA-Z0-9.-]*"
          type: string
          example: /mecplatforms?UEIdentityType=IPAddress&UEIdentity=123.456.78.101
    links_Registerserviceendpoint_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: RegisterServiceEndpoint
          type: string
          example: RegisterServiceEndpoint
        method:
          pattern: post
          type: string
          example: post
        href:
          pattern: /serviceendpoints
          type: string
          example: /serviceendpoints
    links_Updateserviceendpoint_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: UpdateServiceEndpoint
          type: string
          example: UpdateServiceEndpoint
        method:
          pattern: put
          type: string
          example: put
        href:
          pattern: "\\/serviceendpoints\\/[A-Za-z0-9]*$"
          type: string
          example: /serviceendpoints/98765
    links_Deleteserviceendpoint_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: DeleteServiceEndpoint
          type: string
          example: DeleteServiceEndpoint
        method:
          pattern: delete
          type: string
          example: delete
        href:
          pattern: "\\/serviceendpoints\\/[A-Za-z0-9]*$"
          type: string
          example: /serviceendpoints/98765
    links_Optimalserviceendpointsbyserviceprofile_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: ListServiceEndpointsByServiceProfileId
          type: string
          example: ListServiceEndpointsByServiceProfileId
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/serviceendpoints\\?serviceProfileId=[A-Za-z0-9]*$"
          type: string
          example: /serviceendpoints?serviceProfileId=12345
    links_Optimalserviceendpointsbyzone_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalServiceEndpointsByZone
          type: string
          example: GetOptimalServiceEndpointsByZone
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "\\/serviceendpoints\\?zone=[A-Za-z0-9-]*$"
          type: string
          example: /serviceendpoints?zone=us-east1
    links_Optimalserviceendpointsbyregion_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: GetOptimalServiceEndpointsByRegion
          type: string
          example: GetOptimalServiceEndpointsByRegion
        method:
          pattern: get
          type: string
          example: get
        href:
          pattern: "/serviceendpoints?region={string}"
          type: string
          example: /serviceendpoints?region=us-east1
    links_Createserviceprofile_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: CreateServiceProfile
          type: string
          example: CreateServiceProfile
        method:
          pattern: post
          type: string
          example: post
        href:
          pattern: /serviceprofiles
          type: string
          example: /serviceprofiles
    links_Updateserviceprofile_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: UpdateServiceProfile
          type: string
          example: UpdateServiceProfile
        method:
          pattern: put
          type: string
          example: put
        href:
          pattern: "\\/serviceprofiles\\/[0-9]*$"
          type: string
          example: /serviceprofiles/12345
    links_Deleteserviceprofile_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: DeleteServiceProfile
          type: string
          example: DeleteServiceProfile
        method:
          pattern: delete
          type: string
          example: delete
        href:
          pattern: "\\/serviceprofiles\\/[0-9]*$"
          type: string
          example: /serviceprofiles/12345
    links_Self_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: self
          type: string
          example: self
        method:
          pattern: get
          type: string
          example: get
        href:
          type: string
          format: uri
    links_VersionHistory_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: version-history
          type: string
          example: version-history
        method:
          pattern: get
          type: string
          example: get
        href:
          type: string
          format: uri
    links_TermsofService_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: terms-of-service
          type: string
          example: terms-of-service
        method:
          pattern: get
          type: string
          example: get
        href:
          type: string
          format: uri
    links_Bookmark_link:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          pattern: bookmark
          type: string
          example: bookmark
        method:
          pattern: get
          type: string
          example: get
        href:
          type: string
          format: uri
  responses:
    OK:
      description: HTTP 200 OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_success'
    Created:
      description: HTTP 201 Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_success'
    NoContent:
      description: HTTP 204 No Content
    BadRequest:
      description: HTTP 400 Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_error'
    NotFound:
      description: HTTP 404 The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_error'
    Unauthorized:
      description: HTTP 401 Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_error'
    Unexpected:
      description: HTTP 500 Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/types_error'
  parameters:
    serviceProfileId:
      name: serviceProfileId
      in: query
      description: service profile identifier
      required: false
      style: form
      explode: true
      schema:
        type: string
    region:
      name: region
      in: query
      description: MEC region ID
      required: false
      style: form
      explode: true
      schema:
        type: string
    serviceEndpointsIds:
      name: serviceEndpointsIds
      in: query
      description: "serviceEndpointsIds, delimited by pipe. Each serviceEndpointsId\
        \ is a pointer to the service endpoints (IP address, FQDN etc.) previously\
        \ registered for a given service."
      required: true
      style: pipeDelimited
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/types_serviceEndpoints_Id'
    subscriberDensity:
      name: subscriberDensity
      in: query
      description: Minimum number of 4G/5G subscribers per square kilometer.
      required: false
      style: form
      explode: true
      schema:
        type: integer
    UEIdentityType:
      name: UEIdentityType
      in: query
      description: Type of User Equipment identifier used in `UEIdentity`.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/types_UEIdentityType'
    UEIdentity:
      name: UEIdentity
      in: query
      description: Identifier value for User Equipment. The type of identifier is
        defined by the UEIdentityType parameter.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/types_UEIdentity'
    zone:
      name: zone
      in: query
      description: MEC zone ID
      required: false
      style: form
      explode: true
      schema:
        type: string
  # securitySchemes:
  #   oAuth2:
  #     type: oauth2
  #     description: "This API uses OAuth 2 with the implicit, password and client credentials\
  #       \ grant flow"
  #     flows:
  #       implicit:
  #         authorizationUrl: https://example.com/oauth/authorize
  #         scopes:
  #           discovery:read: Grant read-only access to discovery data
  #           serviceprofile:read: Grant read-only access to service profile data
  #           serviceprofile:write: Grant write access to service profile data
  #           serviceregistry:read: Grant read-only access to service registry data
  #           serviceregistry:write: Grant write access to service registry data
  #       password:
  #         tokenUrl: https://example.com/oauth/token
  #         scopes:
  #           discovery:read: Grant read-only access to discovery data
  #           serviceprofile:read: Grant read-only access to service profile data
  #           serviceprofile:write: Grant write access to service profile data
  #           serviceregistry:read: Grant read-only access to Service registry data
  #           serviceregistry:write: Grant write access to Service registry data
  #       clientCredentials:
  #         tokenUrl: https://example.com/oauth/token
  #         scopes:
  #           discovery:read: Grant read-only access to discovery data
  #           serviceprofile:read: Grant read-only access to service profile data
  #           serviceprofile:write: Grant write access to service profile data
  #           serviceregistry:read: Grant read-only access to Service registry data
  #           serviceregistry:write: Grant write access to Service registry data
  #     x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_oAuth2
  #     x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_oAuth2

