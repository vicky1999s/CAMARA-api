# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.types_region_id import TypesRegionId  # noqa: F401,E501
from swagger_server.models.types_zone_id import TypesZoneId  # noqa: F401,E501
from swagger_server import util


class ResourcesZoneMetadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, zone_id: TypesZoneId=None, region_id: TypesRegionId=None):  # noqa: E501
        """ResourcesZoneMetadata - a model defined in Swagger

        :param zone_id: The zone_id of this ResourcesZoneMetadata.  # noqa: E501
        :type zone_id: TypesZoneId
        :param region_id: The region_id of this ResourcesZoneMetadata.  # noqa: E501
        :type region_id: TypesRegionId
        """
        self.swagger_types = {
            'zone_id': TypesZoneId,
            'region_id': TypesRegionId
        }

        self.attribute_map = {
            'zone_id': 'zoneId',
            'region_id': 'regionId'
        }
        self._zone_id = zone_id
        self._region_id = region_id

    @classmethod
    def from_dict(cls, dikt) -> 'ResourcesZoneMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourcesZoneMetadata of this ResourcesZoneMetadata.  # noqa: E501
        :rtype: ResourcesZoneMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone_id(self) -> TypesZoneId:
        """Gets the zone_id of this ResourcesZoneMetadata.


        :return: The zone_id of this ResourcesZoneMetadata.
        :rtype: TypesZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: TypesZoneId):
        """Sets the zone_id of this ResourcesZoneMetadata.


        :param zone_id: The zone_id of this ResourcesZoneMetadata.
        :type zone_id: TypesZoneId
        """

        self._zone_id = zone_id

    @property
    def region_id(self) -> TypesRegionId:
        """Gets the region_id of this ResourcesZoneMetadata.


        :return: The region_id of this ResourcesZoneMetadata.
        :rtype: TypesRegionId
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id: TypesRegionId):
        """Sets the region_id of this ResourcesZoneMetadata.


        :param region_id: The region_id of this ResourcesZoneMetadata.
        :type region_id: TypesRegionId
        """

        self._region_id = region_id
