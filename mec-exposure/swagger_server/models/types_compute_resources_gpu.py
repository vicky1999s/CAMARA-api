# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TypesComputeResourcesGPU(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, min_core_clock_mhz: int=None, min_memory_clock_mhz: int=None, min_bandwidth_gbs: int=None, min_tflops: int=None):  # noqa: E501
        """TypesComputeResourcesGPU - a model defined in Swagger

        :param min_core_clock_mhz: The min_core_clock_mhz of this TypesComputeResourcesGPU.  # noqa: E501
        :type min_core_clock_mhz: int
        :param min_memory_clock_mhz: The min_memory_clock_mhz of this TypesComputeResourcesGPU.  # noqa: E501
        :type min_memory_clock_mhz: int
        :param min_bandwidth_gbs: The min_bandwidth_gbs of this TypesComputeResourcesGPU.  # noqa: E501
        :type min_bandwidth_gbs: int
        :param min_tflops: The min_tflops of this TypesComputeResourcesGPU.  # noqa: E501
        :type min_tflops: int
        """
        self.swagger_types = {
            'min_core_clock_mhz': int,
            'min_memory_clock_mhz': int,
            'min_bandwidth_gbs': int,
            'min_tflops': int
        }

        self.attribute_map = {
            'min_core_clock_mhz': 'minCoreClockMHz',
            'min_memory_clock_mhz': 'minMemoryClockMHz',
            'min_bandwidth_gbs': 'minBandwidthGBs',
            'min_tflops': 'minTFLOPS'
        }
        self._min_core_clock_mhz = min_core_clock_mhz
        self._min_memory_clock_mhz = min_memory_clock_mhz
        self._min_bandwidth_gbs = min_bandwidth_gbs
        self._min_tflops = min_tflops

    @classmethod
    def from_dict(cls, dikt) -> 'TypesComputeResourcesGPU':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The types_computeResources_GPU of this TypesComputeResourcesGPU.  # noqa: E501
        :rtype: TypesComputeResourcesGPU
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_core_clock_mhz(self) -> int:
        """Gets the min_core_clock_mhz of this TypesComputeResourcesGPU.

        Minimum Core Clock value in megahertz  # noqa: E501

        :return: The min_core_clock_mhz of this TypesComputeResourcesGPU.
        :rtype: int
        """
        return self._min_core_clock_mhz

    @min_core_clock_mhz.setter
    def min_core_clock_mhz(self, min_core_clock_mhz: int):
        """Sets the min_core_clock_mhz of this TypesComputeResourcesGPU.

        Minimum Core Clock value in megahertz  # noqa: E501

        :param min_core_clock_mhz: The min_core_clock_mhz of this TypesComputeResourcesGPU.
        :type min_core_clock_mhz: int
        """

        self._min_core_clock_mhz = min_core_clock_mhz

    @property
    def min_memory_clock_mhz(self) -> int:
        """Gets the min_memory_clock_mhz of this TypesComputeResourcesGPU.

        Minimum Memory Clock value in megahertz  # noqa: E501

        :return: The min_memory_clock_mhz of this TypesComputeResourcesGPU.
        :rtype: int
        """
        return self._min_memory_clock_mhz

    @min_memory_clock_mhz.setter
    def min_memory_clock_mhz(self, min_memory_clock_mhz: int):
        """Sets the min_memory_clock_mhz of this TypesComputeResourcesGPU.

        Minimum Memory Clock value in megahertz  # noqa: E501

        :param min_memory_clock_mhz: The min_memory_clock_mhz of this TypesComputeResourcesGPU.
        :type min_memory_clock_mhz: int
        """

        self._min_memory_clock_mhz = min_memory_clock_mhz

    @property
    def min_bandwidth_gbs(self) -> int:
        """Gets the min_bandwidth_gbs of this TypesComputeResourcesGPU.

        Minimum GPU bandwidth in GB/s  # noqa: E501

        :return: The min_bandwidth_gbs of this TypesComputeResourcesGPU.
        :rtype: int
        """
        return self._min_bandwidth_gbs

    @min_bandwidth_gbs.setter
    def min_bandwidth_gbs(self, min_bandwidth_gbs: int):
        """Sets the min_bandwidth_gbs of this TypesComputeResourcesGPU.

        Minimum GPU bandwidth in GB/s  # noqa: E501

        :param min_bandwidth_gbs: The min_bandwidth_gbs of this TypesComputeResourcesGPU.
        :type min_bandwidth_gbs: int
        """

        self._min_bandwidth_gbs = min_bandwidth_gbs

    @property
    def min_tflops(self) -> int:
        """Gets the min_tflops of this TypesComputeResourcesGPU.

        Minimum Floating Point Operations Per Second in Teraflops.  # noqa: E501

        :return: The min_tflops of this TypesComputeResourcesGPU.
        :rtype: int
        """
        return self._min_tflops

    @min_tflops.setter
    def min_tflops(self, min_tflops: int):
        """Sets the min_tflops of this TypesComputeResourcesGPU.

        Minimum Floating Point Operations Per Second in Teraflops.  # noqa: E501

        :param min_tflops: The min_tflops of this TypesComputeResourcesGPU.
        :type min_tflops: int
        """

        self._min_tflops = min_tflops
